//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Model", "ZoneServeur", "Zone", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Entities.Zone), "Serveur", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Entities.Serveur), true)]
[assembly: EdmRelationshipAttribute("Model", "ZoneTable", "Zone", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Entities.Zone), "Table", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Entities.Table), true)]
[assembly: EdmRelationshipAttribute("Model", "CommandePlat", "Commande", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Entities.Commande), "Plat", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Entities.Plat))]
[assembly: EdmRelationshipAttribute("Model", "TableCommande", "Table", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Entities.Table), "Commande", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Entities.Commande), true)]
[assembly: EdmRelationshipAttribute("Model", "RestaurantZone", "Restaurant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Entities.Restaurant), "Zone", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Entities.Zone), true)]
[assembly: EdmRelationshipAttribute("Model", "RestaurantManager", "Restaurant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Entities.Restaurant), "Manager", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Entities.Manager))]
[assembly: EdmRelationshipAttribute("Model", "TypeNotificationNotification", "TypeNotification", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Entities.TypeNotification), "Notification", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Entities.Notification))]
[assembly: EdmRelationshipAttribute("Model", "NotificationCommande", "Notification", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Entities.Notification), "Commande", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Entities.Commande))]
[assembly: EdmRelationshipAttribute("Model", "TypePlatPlat", "TypePlat", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Entities.TypePlat), "Plat", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Entities.Plat), true)]
[assembly: EdmRelationshipAttribute("Model", "SpecialitePlat", "Specialite", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Entities.Specialite), "Plat", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Entities.Plat), true)]
[assembly: EdmRelationshipAttribute("Model", "PlatCarte", "Plat", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Entities.Plat), "Carte", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Entities.Carte))]
[assembly: EdmRelationshipAttribute("Model", "PlatEnCoursCommande", "PlatEnCours", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Entities.PlatEnCours), "Commande", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Entities.Commande))]
[assembly: EdmRelationshipAttribute("Model", "PlatEnCoursCuisinier", "PlatEnCours", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Entities.PlatEnCours), "Cuisinier", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Entities.Cuisinier))]
[assembly: EdmRelationshipAttribute("Model", "SpecialiteCarte", "Specialite", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Entities.Specialite), "Carte", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Entities.Carte), true)]

#endregion

namespace Entities
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ModelContainer : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ModelContainer object using the connection string found in the 'ModelContainer' section of the application configuration file.
        /// </summary>
        public ModelContainer() : base("name=ModelContainer", "ModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ModelContainer object.
        /// </summary>
        public ModelContainer(string connectionString) : base(connectionString, "ModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ModelContainer object.
        /// </summary>
        public ModelContainer(EntityConnection connection) : base(connection, "ModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Restaurant> RestaurantJeu
        {
            get
            {
                if ((_RestaurantJeu == null))
                {
                    _RestaurantJeu = base.CreateObjectSet<Restaurant>("RestaurantJeu");
                }
                return _RestaurantJeu;
            }
        }
        private ObjectSet<Restaurant> _RestaurantJeu;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Zone> ZoneJeu
        {
            get
            {
                if ((_ZoneJeu == null))
                {
                    _ZoneJeu = base.CreateObjectSet<Zone>("ZoneJeu");
                }
                return _ZoneJeu;
            }
        }
        private ObjectSet<Zone> _ZoneJeu;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Table> TableJeu
        {
            get
            {
                if ((_TableJeu == null))
                {
                    _TableJeu = base.CreateObjectSet<Table>("TableJeu");
                }
                return _TableJeu;
            }
        }
        private ObjectSet<Table> _TableJeu;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Commande> CommandeJeu
        {
            get
            {
                if ((_CommandeJeu == null))
                {
                    _CommandeJeu = base.CreateObjectSet<Commande>("CommandeJeu");
                }
                return _CommandeJeu;
            }
        }
        private ObjectSet<Commande> _CommandeJeu;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Plat> PlatJeu1
        {
            get
            {
                if ((_PlatJeu1 == null))
                {
                    _PlatJeu1 = base.CreateObjectSet<Plat>("PlatJeu1");
                }
                return _PlatJeu1;
            }
        }
        private ObjectSet<Plat> _PlatJeu1;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Carte> CarteJeu
        {
            get
            {
                if ((_CarteJeu == null))
                {
                    _CarteJeu = base.CreateObjectSet<Carte>("CarteJeu");
                }
                return _CarteJeu;
            }
        }
        private ObjectSet<Carte> _CarteJeu;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Notification> NotificationJeu
        {
            get
            {
                if ((_NotificationJeu == null))
                {
                    _NotificationJeu = base.CreateObjectSet<Notification>("NotificationJeu");
                }
                return _NotificationJeu;
            }
        }
        private ObjectSet<Notification> _NotificationJeu;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Commande1> Commande1Jeu
        {
            get
            {
                if ((_Commande1Jeu == null))
                {
                    _Commande1Jeu = base.CreateObjectSet<Commande1>("Commande1Jeu");
                }
                return _Commande1Jeu;
            }
        }
        private ObjectSet<Commande1> _Commande1Jeu;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TypePlat> TypePlatJeu
        {
            get
            {
                if ((_TypePlatJeu == null))
                {
                    _TypePlatJeu = base.CreateObjectSet<TypePlat>("TypePlatJeu");
                }
                return _TypePlatJeu;
            }
        }
        private ObjectSet<TypePlat> _TypePlatJeu;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Specialite> SpecialiteJeu
        {
            get
            {
                if ((_SpecialiteJeu == null))
                {
                    _SpecialiteJeu = base.CreateObjectSet<Specialite>("SpecialiteJeu");
                }
                return _SpecialiteJeu;
            }
        }
        private ObjectSet<Specialite> _SpecialiteJeu;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Log> LogJeu
        {
            get
            {
                if ((_LogJeu == null))
                {
                    _LogJeu = base.CreateObjectSet<Log>("LogJeu");
                }
                return _LogJeu;
            }
        }
        private ObjectSet<Log> _LogJeu;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TypeNotification> TypeNotificationJeu
        {
            get
            {
                if ((_TypeNotificationJeu == null))
                {
                    _TypeNotificationJeu = base.CreateObjectSet<TypeNotification>("TypeNotificationJeu");
                }
                return _TypeNotificationJeu;
            }
        }
        private ObjectSet<TypeNotification> _TypeNotificationJeu;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PlatEnCours> PlatEnCoursJeu
        {
            get
            {
                if ((_PlatEnCoursJeu == null))
                {
                    _PlatEnCoursJeu = base.CreateObjectSet<PlatEnCours>("PlatEnCoursJeu");
                }
                return _PlatEnCoursJeu;
            }
        }
        private ObjectSet<PlatEnCours> _PlatEnCoursJeu;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Personne> PersonneJeu
        {
            get
            {
                if ((_PersonneJeu == null))
                {
                    _PersonneJeu = base.CreateObjectSet<Personne>("PersonneJeu");
                }
                return _PersonneJeu;
            }
        }
        private ObjectSet<Personne> _PersonneJeu;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RestaurantJeu EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRestaurantJeu(Restaurant restaurant)
        {
            base.AddObject("RestaurantJeu", restaurant);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ZoneJeu EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToZoneJeu(Zone zone)
        {
            base.AddObject("ZoneJeu", zone);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TableJeu EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTableJeu(Table table)
        {
            base.AddObject("TableJeu", table);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CommandeJeu EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCommandeJeu(Commande commande)
        {
            base.AddObject("CommandeJeu", commande);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PlatJeu1 EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPlatJeu1(Plat plat)
        {
            base.AddObject("PlatJeu1", plat);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CarteJeu EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCarteJeu(Carte carte)
        {
            base.AddObject("CarteJeu", carte);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the NotificationJeu EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNotificationJeu(Notification notification)
        {
            base.AddObject("NotificationJeu", notification);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Commande1Jeu EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCommande1Jeu(Commande1 commande1)
        {
            base.AddObject("Commande1Jeu", commande1);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TypePlatJeu EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTypePlatJeu(TypePlat typePlat)
        {
            base.AddObject("TypePlatJeu", typePlat);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SpecialiteJeu EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSpecialiteJeu(Specialite specialite)
        {
            base.AddObject("SpecialiteJeu", specialite);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LogJeu EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLogJeu(Log log)
        {
            base.AddObject("LogJeu", log);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TypeNotificationJeu EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTypeNotificationJeu(TypeNotification typeNotification)
        {
            base.AddObject("TypeNotificationJeu", typeNotification);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PlatEnCoursJeu EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPlatEnCoursJeu(PlatEnCours platEnCours)
        {
            base.AddObject("PlatEnCoursJeu", platEnCours);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PersonneJeu EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPersonneJeu(Personne personne)
        {
            base.AddObject("PersonneJeu", personne);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Carte")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Carte : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Carte object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="nom">Initial value of the Nom property.</param>
        /// <param name="dateCreation">Initial value of the DateCreation property.</param>
        /// <param name="dateDerniereApplication">Initial value of the DateDerniereApplication property.</param>
        /// <param name="dateProchaineApplication">Initial value of the DateProchaineApplication property.</param>
        /// <param name="specialiteID">Initial value of the SpecialiteID property.</param>
        public static Carte CreateCarte(global::System.Int32 id, global::System.String nom, global::System.DateTime dateCreation, global::System.DateTime dateDerniereApplication, global::System.DateTime dateProchaineApplication, global::System.Int32 specialiteID)
        {
            Carte carte = new Carte();
            carte.ID = id;
            carte.Nom = nom;
            carte.DateCreation = dateCreation;
            carte.DateDerniereApplication = dateDerniereApplication;
            carte.DateProchaineApplication = dateProchaineApplication;
            carte.SpecialiteID = specialiteID;
            return carte;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Nom
        {
            get
            {
                return _Nom;
            }
            set
            {
                OnNomChanging(value);
                ReportPropertyChanging("Nom");
                _Nom = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Nom");
                OnNomChanged();
            }
        }
        private global::System.String _Nom;
        partial void OnNomChanging(global::System.String value);
        partial void OnNomChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreation
        {
            get
            {
                return _DateCreation;
            }
            set
            {
                OnDateCreationChanging(value);
                ReportPropertyChanging("DateCreation");
                _DateCreation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreation");
                OnDateCreationChanged();
            }
        }
        private global::System.DateTime _DateCreation;
        partial void OnDateCreationChanging(global::System.DateTime value);
        partial void OnDateCreationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateDerniereApplication
        {
            get
            {
                return _DateDerniereApplication;
            }
            set
            {
                OnDateDerniereApplicationChanging(value);
                ReportPropertyChanging("DateDerniereApplication");
                _DateDerniereApplication = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateDerniereApplication");
                OnDateDerniereApplicationChanged();
            }
        }
        private global::System.DateTime _DateDerniereApplication;
        partial void OnDateDerniereApplicationChanging(global::System.DateTime value);
        partial void OnDateDerniereApplicationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateProchaineApplication
        {
            get
            {
                return _DateProchaineApplication;
            }
            set
            {
                OnDateProchaineApplicationChanging(value);
                ReportPropertyChanging("DateProchaineApplication");
                _DateProchaineApplication = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateProchaineApplication");
                OnDateProchaineApplicationChanged();
            }
        }
        private global::System.DateTime _DateProchaineApplication;
        partial void OnDateProchaineApplicationChanging(global::System.DateTime value);
        partial void OnDateProchaineApplicationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SpecialiteID
        {
            get
            {
                return _SpecialiteID;
            }
            set
            {
                OnSpecialiteIDChanging(value);
                ReportPropertyChanging("SpecialiteID");
                _SpecialiteID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SpecialiteID");
                OnSpecialiteIDChanged();
            }
        }
        private global::System.Int32 _SpecialiteID;
        partial void OnSpecialiteIDChanging(global::System.Int32 value);
        partial void OnSpecialiteIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "PlatCarte", "Plat")]
        public EntityCollection<Plat> Plat
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Plat>("Model.PlatCarte", "Plat");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Plat>("Model.PlatCarte", "Plat", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "SpecialiteCarte", "Specialite")]
        public Specialite Specialite
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Specialite>("Model.SpecialiteCarte", "Specialite").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Specialite>("Model.SpecialiteCarte", "Specialite").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Specialite> SpecialiteReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Specialite>("Model.SpecialiteCarte", "Specialite");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Specialite>("Model.SpecialiteCarte", "Specialite", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Commande")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Commande : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Commande object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="reglement">Initial value of the Reglement property.</param>
        /// <param name="prix">Initial value of the Prix property.</param>
        /// <param name="cuisinierID">Initial value of the CuisinierID property.</param>
        /// <param name="tableID">Initial value of the TableID property.</param>
        public static Commande CreateCommande(global::System.Int32 id, global::System.DateTime date, global::System.Boolean reglement, global::System.Double prix, global::System.Int32 cuisinierID, global::System.Int32 tableID)
        {
            Commande commande = new Commande();
            commande.ID = id;
            commande.Date = date;
            commande.Reglement = reglement;
            commande.Prix = prix;
            commande.CuisinierID = cuisinierID;
            commande.TableID = tableID;
            return commande;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Reglement
        {
            get
            {
                return _Reglement;
            }
            set
            {
                OnReglementChanging(value);
                ReportPropertyChanging("Reglement");
                _Reglement = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Reglement");
                OnReglementChanged();
            }
        }
        private global::System.Boolean _Reglement;
        partial void OnReglementChanging(global::System.Boolean value);
        partial void OnReglementChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Prix
        {
            get
            {
                return _Prix;
            }
            set
            {
                OnPrixChanging(value);
                ReportPropertyChanging("Prix");
                _Prix = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Prix");
                OnPrixChanged();
            }
        }
        private global::System.Double _Prix;
        partial void OnPrixChanging(global::System.Double value);
        partial void OnPrixChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CuisinierID
        {
            get
            {
                return _CuisinierID;
            }
            set
            {
                OnCuisinierIDChanging(value);
                ReportPropertyChanging("CuisinierID");
                _CuisinierID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CuisinierID");
                OnCuisinierIDChanged();
            }
        }
        private global::System.Int32 _CuisinierID;
        partial void OnCuisinierIDChanging(global::System.Int32 value);
        partial void OnCuisinierIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TableID
        {
            get
            {
                return _TableID;
            }
            set
            {
                OnTableIDChanging(value);
                ReportPropertyChanging("TableID");
                _TableID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TableID");
                OnTableIDChanged();
            }
        }
        private global::System.Int32 _TableID;
        partial void OnTableIDChanging(global::System.Int32 value);
        partial void OnTableIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "CommandePlat", "Plat")]
        public EntityCollection<Plat> Plat
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Plat>("Model.CommandePlat", "Plat");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Plat>("Model.CommandePlat", "Plat", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "TableCommande", "Table")]
        public Table Table
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Table>("Model.TableCommande", "Table").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Table>("Model.TableCommande", "Table").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Table> TableReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Table>("Model.TableCommande", "Table");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Table>("Model.TableCommande", "Table", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "NotificationCommande", "Notification")]
        public EntityCollection<Notification> Notification
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Notification>("Model.NotificationCommande", "Notification");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Notification>("Model.NotificationCommande", "Notification", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "PlatEnCoursCommande", "PlatEnCours")]
        public EntityCollection<PlatEnCours> PlatEnCours
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PlatEnCours>("Model.PlatEnCoursCommande", "PlatEnCours");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PlatEnCours>("Model.PlatEnCoursCommande", "PlatEnCours", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Commande1")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Commande1 : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Commande1 object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static Commande1 CreateCommande1(global::System.Int32 id)
        {
            Commande1 commande1 = new Commande1();
            commande1.ID = id;
            return commande1;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Cuisinier")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Cuisinier : Personne
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Cuisinier object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="nom">Initial value of the Nom property.</param>
        /// <param name="prenom">Initial value of the Prenom property.</param>
        public static Cuisinier CreateCuisinier(global::System.Int32 id, global::System.String email, global::System.String password, global::System.String nom, global::System.String prenom)
        {
            Cuisinier cuisinier = new Cuisinier();
            cuisinier.ID = id;
            cuisinier.Email = email;
            cuisinier.Password = password;
            cuisinier.Nom = nom;
            cuisinier.Prenom = prenom;
            return cuisinier;
        }

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "PlatEnCoursCuisinier", "PlatEnCours")]
        public PlatEnCours PlatEnCours
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PlatEnCours>("Model.PlatEnCoursCuisinier", "PlatEnCours").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PlatEnCours>("Model.PlatEnCoursCuisinier", "PlatEnCours").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PlatEnCours> PlatEnCoursReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PlatEnCours>("Model.PlatEnCoursCuisinier", "PlatEnCours");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PlatEnCours>("Model.PlatEnCoursCuisinier", "PlatEnCours", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Log")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Log : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Log object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="type">Initial value of the type property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        public static Log CreateLog(global::System.Int32 id, global::System.String type, global::System.DateTime date)
        {
            Log log = new Log();
            log.ID = id;
            log.type = type;
            log.Date = date;
            return log;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String type
        {
            get
            {
                return _type;
            }
            set
            {
                OntypeChanging(value);
                ReportPropertyChanging("type");
                _type = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("type");
                OntypeChanged();
            }
        }
        private global::System.String _type;
        partial void OntypeChanging(global::System.String value);
        partial void OntypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Manager")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Manager : Personne
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Manager object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="nom">Initial value of the Nom property.</param>
        /// <param name="prenom">Initial value of the Prenom property.</param>
        /// <param name="restaurantID">Initial value of the RestaurantID property.</param>
        public static Manager CreateManager(global::System.Int32 id, global::System.String email, global::System.String password, global::System.String nom, global::System.String prenom, global::System.Int32 restaurantID)
        {
            Manager manager = new Manager();
            manager.ID = id;
            manager.Email = email;
            manager.Password = password;
            manager.Nom = nom;
            manager.Prenom = prenom;
            manager.RestaurantID = restaurantID;
            return manager;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RestaurantID
        {
            get
            {
                return _RestaurantID;
            }
            set
            {
                OnRestaurantIDChanging(value);
                ReportPropertyChanging("RestaurantID");
                _RestaurantID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RestaurantID");
                OnRestaurantIDChanged();
            }
        }
        private global::System.Int32 _RestaurantID;
        partial void OnRestaurantIDChanging(global::System.Int32 value);
        partial void OnRestaurantIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "RestaurantManager", "Restaurant")]
        public Restaurant Restaurant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Restaurant>("Model.RestaurantManager", "Restaurant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Restaurant>("Model.RestaurantManager", "Restaurant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Restaurant> RestaurantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Restaurant>("Model.RestaurantManager", "Restaurant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Restaurant>("Model.RestaurantManager", "Restaurant", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Notification")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Notification : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Notification object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="fait">Initial value of the Fait property.</param>
        public static Notification CreateNotification(global::System.Int32 id, global::System.DateTime date, global::System.Boolean fait)
        {
            Notification notification = new Notification();
            notification.ID = id;
            notification.Date = date;
            notification.Fait = fait;
            return notification;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Fait
        {
            get
            {
                return _Fait;
            }
            set
            {
                OnFaitChanging(value);
                ReportPropertyChanging("Fait");
                _Fait = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Fait");
                OnFaitChanged();
            }
        }
        private global::System.Boolean _Fait;
        partial void OnFaitChanging(global::System.Boolean value);
        partial void OnFaitChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "TypeNotificationNotification", "TypeNotification")]
        public TypeNotification TypeNotification
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TypeNotification>("Model.TypeNotificationNotification", "TypeNotification").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TypeNotification>("Model.TypeNotificationNotification", "TypeNotification").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TypeNotification> TypeNotificationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TypeNotification>("Model.TypeNotificationNotification", "TypeNotification");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TypeNotification>("Model.TypeNotificationNotification", "TypeNotification", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "NotificationCommande", "Commande")]
        public EntityCollection<Commande> Commande
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Commande>("Model.NotificationCommande", "Commande");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Commande>("Model.NotificationCommande", "Commande", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Personne")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(Serveur))]
    [KnownTypeAttribute(typeof(Manager))]
    [KnownTypeAttribute(typeof(Cuisinier))]
    public partial class Personne : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Personne object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="nom">Initial value of the Nom property.</param>
        /// <param name="prenom">Initial value of the Prenom property.</param>
        public static Personne CreatePersonne(global::System.Int32 id, global::System.String email, global::System.String password, global::System.String nom, global::System.String prenom)
        {
            Personne personne = new Personne();
            personne.ID = id;
            personne.Email = email;
            personne.Password = password;
            personne.Nom = nom;
            personne.Prenom = prenom;
            return personne;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Nom
        {
            get
            {
                return _Nom;
            }
            set
            {
                OnNomChanging(value);
                ReportPropertyChanging("Nom");
                _Nom = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Nom");
                OnNomChanged();
            }
        }
        private global::System.String _Nom;
        partial void OnNomChanging(global::System.String value);
        partial void OnNomChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Prenom
        {
            get
            {
                return _Prenom;
            }
            set
            {
                OnPrenomChanging(value);
                ReportPropertyChanging("Prenom");
                _Prenom = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Prenom");
                OnPrenomChanged();
            }
        }
        private global::System.String _Prenom;
        partial void OnPrenomChanging(global::System.String value);
        partial void OnPrenomChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Plat")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Plat : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Plat object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="nom">Initial value of the Nom property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="prix">Initial value of the Prix property.</param>
        /// <param name="typePlatID">Initial value of the TypePlatID property.</param>
        /// <param name="specialiteID">Initial value of the SpecialiteID property.</param>
        public static Plat CreatePlat(global::System.Int32 id, global::System.String nom, global::System.String description, global::System.Double prix, global::System.Int32 typePlatID, global::System.Int32 specialiteID)
        {
            Plat plat = new Plat();
            plat.ID = id;
            plat.Nom = nom;
            plat.Description = description;
            plat.Prix = prix;
            plat.TypePlatID = typePlatID;
            plat.SpecialiteID = specialiteID;
            return plat;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Nom
        {
            get
            {
                return _Nom;
            }
            set
            {
                OnNomChanging(value);
                ReportPropertyChanging("Nom");
                _Nom = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Nom");
                OnNomChanged();
            }
        }
        private global::System.String _Nom;
        partial void OnNomChanging(global::System.String value);
        partial void OnNomChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Prix
        {
            get
            {
                return _Prix;
            }
            set
            {
                OnPrixChanging(value);
                ReportPropertyChanging("Prix");
                _Prix = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Prix");
                OnPrixChanged();
            }
        }
        private global::System.Double _Prix;
        partial void OnPrixChanging(global::System.Double value);
        partial void OnPrixChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TypePlatID
        {
            get
            {
                return _TypePlatID;
            }
            set
            {
                OnTypePlatIDChanging(value);
                ReportPropertyChanging("TypePlatID");
                _TypePlatID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TypePlatID");
                OnTypePlatIDChanged();
            }
        }
        private global::System.Int32 _TypePlatID;
        partial void OnTypePlatIDChanging(global::System.Int32 value);
        partial void OnTypePlatIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SpecialiteID
        {
            get
            {
                return _SpecialiteID;
            }
            set
            {
                OnSpecialiteIDChanging(value);
                ReportPropertyChanging("SpecialiteID");
                _SpecialiteID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SpecialiteID");
                OnSpecialiteIDChanged();
            }
        }
        private global::System.Int32 _SpecialiteID;
        partial void OnSpecialiteIDChanging(global::System.Int32 value);
        partial void OnSpecialiteIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "CommandePlat", "Commande")]
        public EntityCollection<Commande> Commande
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Commande>("Model.CommandePlat", "Commande");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Commande>("Model.CommandePlat", "Commande", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "TypePlatPlat", "TypePlat")]
        public TypePlat TypePlat
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TypePlat>("Model.TypePlatPlat", "TypePlat").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TypePlat>("Model.TypePlatPlat", "TypePlat").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TypePlat> TypePlatReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TypePlat>("Model.TypePlatPlat", "TypePlat");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TypePlat>("Model.TypePlatPlat", "TypePlat", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "SpecialitePlat", "Specialite")]
        public Specialite Specialite
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Specialite>("Model.SpecialitePlat", "Specialite").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Specialite>("Model.SpecialitePlat", "Specialite").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Specialite> SpecialiteReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Specialite>("Model.SpecialitePlat", "Specialite");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Specialite>("Model.SpecialitePlat", "Specialite", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "PlatCarte", "Carte")]
        public EntityCollection<Carte> Carte
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Carte>("Model.PlatCarte", "Carte");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Carte>("Model.PlatCarte", "Carte", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="PlatEnCours")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PlatEnCours : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PlatEnCours object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="commandeID">Initial value of the CommandeID property.</param>
        /// <param name="cuisinierID">Initial value of the CuisinierID property.</param>
        public static PlatEnCours CreatePlatEnCours(global::System.Int32 id, global::System.String commandeID, global::System.String cuisinierID)
        {
            PlatEnCours platEnCours = new PlatEnCours();
            platEnCours.ID = id;
            platEnCours.CommandeID = commandeID;
            platEnCours.CuisinierID = cuisinierID;
            return platEnCours;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CommandeID
        {
            get
            {
                return _CommandeID;
            }
            set
            {
                OnCommandeIDChanging(value);
                ReportPropertyChanging("CommandeID");
                _CommandeID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CommandeID");
                OnCommandeIDChanged();
            }
        }
        private global::System.String _CommandeID;
        partial void OnCommandeIDChanging(global::System.String value);
        partial void OnCommandeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CuisinierID
        {
            get
            {
                return _CuisinierID;
            }
            set
            {
                OnCuisinierIDChanging(value);
                ReportPropertyChanging("CuisinierID");
                _CuisinierID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CuisinierID");
                OnCuisinierIDChanged();
            }
        }
        private global::System.String _CuisinierID;
        partial void OnCuisinierIDChanging(global::System.String value);
        partial void OnCuisinierIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "PlatEnCoursCommande", "Commande")]
        public Commande Commande
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Commande>("Model.PlatEnCoursCommande", "Commande").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Commande>("Model.PlatEnCoursCommande", "Commande").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Commande> CommandeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Commande>("Model.PlatEnCoursCommande", "Commande");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Commande>("Model.PlatEnCoursCommande", "Commande", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "PlatEnCoursCuisinier", "Cuisinier")]
        public Cuisinier Cuisinier
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cuisinier>("Model.PlatEnCoursCuisinier", "Cuisinier").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cuisinier>("Model.PlatEnCoursCuisinier", "Cuisinier").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Cuisinier> CuisinierReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cuisinier>("Model.PlatEnCoursCuisinier", "Cuisinier");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Cuisinier>("Model.PlatEnCoursCuisinier", "Cuisinier", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Restaurant")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Restaurant : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Restaurant object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="adresse">Initial value of the Adresse property.</param>
        /// <param name="capacite">Initial value of the Capacite property.</param>
        /// <param name="tel">Initial value of the Tel property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        public static Restaurant CreateRestaurant(global::System.Int32 id, global::System.String description, global::System.String adresse, global::System.Int32 capacite, global::System.String tel, global::System.String email)
        {
            Restaurant restaurant = new Restaurant();
            restaurant.ID = id;
            restaurant.Description = description;
            restaurant.Adresse = adresse;
            restaurant.Capacite = capacite;
            restaurant.Tel = tel;
            restaurant.Email = email;
            return restaurant;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Adresse
        {
            get
            {
                return _Adresse;
            }
            set
            {
                OnAdresseChanging(value);
                ReportPropertyChanging("Adresse");
                _Adresse = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Adresse");
                OnAdresseChanged();
            }
        }
        private global::System.String _Adresse;
        partial void OnAdresseChanging(global::System.String value);
        partial void OnAdresseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Capacite
        {
            get
            {
                return _Capacite;
            }
            set
            {
                OnCapaciteChanging(value);
                ReportPropertyChanging("Capacite");
                _Capacite = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Capacite");
                OnCapaciteChanged();
            }
        }
        private global::System.Int32 _Capacite;
        partial void OnCapaciteChanging(global::System.Int32 value);
        partial void OnCapaciteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Tel
        {
            get
            {
                return _Tel;
            }
            set
            {
                OnTelChanging(value);
                ReportPropertyChanging("Tel");
                _Tel = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Tel");
                OnTelChanged();
            }
        }
        private global::System.String _Tel;
        partial void OnTelChanging(global::System.String value);
        partial void OnTelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "RestaurantZone", "Zone")]
        public EntityCollection<Zone> Zone
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Zone>("Model.RestaurantZone", "Zone");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Zone>("Model.RestaurantZone", "Zone", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "RestaurantManager", "Manager")]
        public Manager Manager
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Manager>("Model.RestaurantManager", "Manager").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Manager>("Model.RestaurantManager", "Manager").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Manager> ManagerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Manager>("Model.RestaurantManager", "Manager");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Manager>("Model.RestaurantManager", "Manager", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Serveur")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Serveur : Personne
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Serveur object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="nom">Initial value of the Nom property.</param>
        /// <param name="prenom">Initial value of the Prenom property.</param>
        /// <param name="zoneID">Initial value of the ZoneID property.</param>
        public static Serveur CreateServeur(global::System.Int32 id, global::System.String email, global::System.String password, global::System.String nom, global::System.String prenom, global::System.Int32 zoneID)
        {
            Serveur serveur = new Serveur();
            serveur.ID = id;
            serveur.Email = email;
            serveur.Password = password;
            serveur.Nom = nom;
            serveur.Prenom = prenom;
            serveur.ZoneID = zoneID;
            return serveur;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ZoneID
        {
            get
            {
                return _ZoneID;
            }
            set
            {
                OnZoneIDChanging(value);
                ReportPropertyChanging("ZoneID");
                _ZoneID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ZoneID");
                OnZoneIDChanged();
            }
        }
        private global::System.Int32 _ZoneID;
        partial void OnZoneIDChanging(global::System.Int32 value);
        partial void OnZoneIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "ZoneServeur", "Zone")]
        public Zone Zone
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Zone>("Model.ZoneServeur", "Zone").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Zone>("Model.ZoneServeur", "Zone").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Zone> ZoneReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Zone>("Model.ZoneServeur", "Zone");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Zone>("Model.ZoneServeur", "Zone", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Specialite")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Specialite : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Specialite object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="nom">Initial value of the Nom property.</param>
        /// <param name="image">Initial value of the Image property.</param>
        public static Specialite CreateSpecialite(global::System.Int32 id, global::System.String nom, global::System.String image)
        {
            Specialite specialite = new Specialite();
            specialite.ID = id;
            specialite.Nom = nom;
            specialite.Image = image;
            return specialite;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Nom
        {
            get
            {
                return _Nom;
            }
            set
            {
                OnNomChanging(value);
                ReportPropertyChanging("Nom");
                _Nom = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Nom");
                OnNomChanged();
            }
        }
        private global::System.String _Nom;
        partial void OnNomChanging(global::System.String value);
        partial void OnNomChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Image
        {
            get
            {
                return _Image;
            }
            set
            {
                OnImageChanging(value);
                ReportPropertyChanging("Image");
                _Image = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Image");
                OnImageChanged();
            }
        }
        private global::System.String _Image;
        partial void OnImageChanging(global::System.String value);
        partial void OnImageChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "SpecialitePlat", "Plat")]
        public EntityCollection<Plat> Plat
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Plat>("Model.SpecialitePlat", "Plat");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Plat>("Model.SpecialitePlat", "Plat", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "SpecialiteCarte", "Carte")]
        public EntityCollection<Carte> Carte
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Carte>("Model.SpecialiteCarte", "Carte");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Carte>("Model.SpecialiteCarte", "Carte", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Table")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Table : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Table object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="capacite">Initial value of the Capacite property.</param>
        /// <param name="numero">Initial value of the Numero property.</param>
        /// <param name="zoneID">Initial value of the ZoneID property.</param>
        public static Table CreateTable(global::System.Int32 id, global::System.String capacite, global::System.Int32 numero, global::System.Int32 zoneID)
        {
            Table table = new Table();
            table.ID = id;
            table.Capacite = capacite;
            table.Numero = numero;
            table.ZoneID = zoneID;
            return table;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Capacite
        {
            get
            {
                return _Capacite;
            }
            set
            {
                OnCapaciteChanging(value);
                ReportPropertyChanging("Capacite");
                _Capacite = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Capacite");
                OnCapaciteChanged();
            }
        }
        private global::System.String _Capacite;
        partial void OnCapaciteChanging(global::System.String value);
        partial void OnCapaciteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Numero
        {
            get
            {
                return _Numero;
            }
            set
            {
                OnNumeroChanging(value);
                ReportPropertyChanging("Numero");
                _Numero = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Numero");
                OnNumeroChanged();
            }
        }
        private global::System.Int32 _Numero;
        partial void OnNumeroChanging(global::System.Int32 value);
        partial void OnNumeroChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ZoneID
        {
            get
            {
                return _ZoneID;
            }
            set
            {
                OnZoneIDChanging(value);
                ReportPropertyChanging("ZoneID");
                _ZoneID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ZoneID");
                OnZoneIDChanged();
            }
        }
        private global::System.Int32 _ZoneID;
        partial void OnZoneIDChanging(global::System.Int32 value);
        partial void OnZoneIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "ZoneTable", "Zone")]
        public Zone Zone
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Zone>("Model.ZoneTable", "Zone").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Zone>("Model.ZoneTable", "Zone").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Zone> ZoneReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Zone>("Model.ZoneTable", "Zone");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Zone>("Model.ZoneTable", "Zone", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "TableCommande", "Commande")]
        public EntityCollection<Commande> Commande
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Commande>("Model.TableCommande", "Commande");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Commande>("Model.TableCommande", "Commande", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="TypeNotification")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TypeNotification : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TypeNotification object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static TypeNotification CreateTypeNotification(global::System.Int32 id, global::System.DateTime name)
        {
            TypeNotification typeNotification = new TypeNotification();
            typeNotification.ID = id;
            typeNotification.Name = name;
            return typeNotification;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.DateTime _Name;
        partial void OnNameChanging(global::System.DateTime value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "TypeNotificationNotification", "Notification")]
        public Notification Notification
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Notification>("Model.TypeNotificationNotification", "Notification").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Notification>("Model.TypeNotificationNotification", "Notification").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Notification> NotificationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Notification>("Model.TypeNotificationNotification", "Notification");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Notification>("Model.TypeNotificationNotification", "Notification", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="TypePlat")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TypePlat : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TypePlat object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static TypePlat CreateTypePlat(global::System.Int32 id, global::System.String description)
        {
            TypePlat typePlat = new TypePlat();
            typePlat.ID = id;
            typePlat.Description = description;
            return typePlat;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "TypePlatPlat", "Plat")]
        public EntityCollection<Plat> Plat
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Plat>("Model.TypePlatPlat", "Plat");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Plat>("Model.TypePlatPlat", "Plat", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Zone")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Zone : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Zone object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="restaurantID">Initial value of the RestaurantID property.</param>
        public static Zone CreateZone(global::System.Int32 id, global::System.String description, global::System.Int32 restaurantID)
        {
            Zone zone = new Zone();
            zone.ID = id;
            zone.Description = description;
            zone.RestaurantID = restaurantID;
            return zone;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RestaurantID
        {
            get
            {
                return _RestaurantID;
            }
            set
            {
                OnRestaurantIDChanging(value);
                ReportPropertyChanging("RestaurantID");
                _RestaurantID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RestaurantID");
                OnRestaurantIDChanged();
            }
        }
        private global::System.Int32 _RestaurantID;
        partial void OnRestaurantIDChanging(global::System.Int32 value);
        partial void OnRestaurantIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "ZoneServeur", "Serveur")]
        public EntityCollection<Serveur> Serveur
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Serveur>("Model.ZoneServeur", "Serveur");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Serveur>("Model.ZoneServeur", "Serveur", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "ZoneTable", "Table")]
        public EntityCollection<Table> Table
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Table>("Model.ZoneTable", "Table");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Table>("Model.ZoneTable", "Table", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "RestaurantZone", "Restaurant")]
        public Restaurant Restaurant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Restaurant>("Model.RestaurantZone", "Restaurant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Restaurant>("Model.RestaurantZone", "Restaurant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Restaurant> RestaurantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Restaurant>("Model.RestaurantZone", "Restaurant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Restaurant>("Model.RestaurantZone", "Restaurant", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
