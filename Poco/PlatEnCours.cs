//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace Poco
{
    public partial class PlatEnCours
    {
        #region Primitive Properties
    
        public virtual int ID
        {
            get;
            set;
        }
    
        public virtual string CommandeID
        {
            get;
            set;
        }
    
        public virtual string CuisinierID
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual Commande Commande
        {
            get { return _commande; }
            set
            {
                if (!ReferenceEquals(_commande, value))
                {
                    var previousValue = _commande;
                    _commande = value;
                    FixupCommande(previousValue);
                }
            }
        }
        private Commande _commande;
    
        public virtual Cuisinier Cuisinier
        {
            get { return _cuisinier; }
            set
            {
                if (!ReferenceEquals(_cuisinier, value))
                {
                    var previousValue = _cuisinier;
                    _cuisinier = value;
                    FixupCuisinier(previousValue);
                }
            }
        }
        private Cuisinier _cuisinier;

        #endregion
        #region Association Fixup
    
        private void FixupCommande(Commande previousValue)
        {
            if (previousValue != null && previousValue.PlatEnCours.Contains(this))
            {
                previousValue.PlatEnCours.Remove(this);
            }
    
            if (Commande != null)
            {
                if (!Commande.PlatEnCours.Contains(this))
                {
                    Commande.PlatEnCours.Add(this);
                }
            }
        }
    
        private void FixupCuisinier(Cuisinier previousValue)
        {
            if (previousValue != null && ReferenceEquals(previousValue.PlatEnCours, this))
            {
                previousValue.PlatEnCours = null;
            }
    
            if (Cuisinier != null)
            {
                Cuisinier.PlatEnCours = this;
            }
        }

        #endregion
    }
}
